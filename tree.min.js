"use strict";var app=angular.module("90TechSAS.angular-tree",[]);app.factory("RecursionHelper",["$compile",function($compile){return{compile:function(element,link){angular.isFunction(link)&&(link={post:link});var compiledContents,contents=element.contents().remove();return{pre:link&&link.pre?link.pre:null,post:function(scope,element){compiledContents||(compiledContents=$compile(contents)),compiledContents(scope,function(clone){element.append(clone)}),link&&link.post&&link.post.apply(null,arguments)}}}}}]),app.directive("zlTree",function(RecursionHelper){return{restrict:"E",scope:{elt:"=zlTreeRoot",loadFunction:"&",template:"="},template:'<div class="zl-tree-button-container"><button ng-if="elt.children.length" class="zl-tree-toggle-button" ng-click="toggleMe()">{{toggle ? \'-\' : \'+\'}}</button></div><ng-include src="template"></ng-include><ul class="zl-tree-ul" ng-if="toggle"><div ng-if="loading" class="zl-tree-spinner"></div><li class="zl-tree-li" ng-if="!loading" ng-repeat="child in children"><zl-tree zl-tree-root="child" load-function="loadFunction({$id: $id, $parent: $parent})" template="template"></zl-tree></li></ul>',compile:function(element){return RecursionHelper.compile(element)},controller:function($scope){$scope.toggleMe=function(){$scope.toggle=!$scope.toggle,$scope.toggle&&!$scope.children&&($scope.loading=!0,$scope.loadFunction({$id:$scope.elt.children,$parent:$scope.elt}).then(function(data){$scope.children=data,$scope.loading=!1}))}}}});